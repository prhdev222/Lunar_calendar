import ICAL from 'ical.js';

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∞ 2024-2025 (‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á)
const fallbackHolyDays = {
  // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 1 (‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏° 2024)
  '2024-12-03': { type: 'full_moon', name: '‡∏ß‡∏±‡∏ô‡πÄ‡∏û‡πá‡∏ç ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 1', icon: 'üåï' },
  '2024-12-10': { type: 'quarter', name: '‡πÅ‡∏£‡∏° 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 1', icon: 'üåó' },
  '2024-12-18': { type: 'new_moon', name: '‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏° ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 1', icon: 'üåë' },
  '2024-12-27': { type: 'quarter', name: '‡∏Ç‡∏∂‡πâ‡∏ô 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 2', icon: 'üåì' },
  
  // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 2 (‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏° 2025)
  '2025-01-02': { type: 'full_moon', name: '‡∏ß‡∏±‡∏ô‡πÄ‡∏û‡πá‡∏ç ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 2', icon: 'üåï' },
  '2025-01-09': { type: 'quarter', name: '‡πÅ‡∏£‡∏° 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 2', icon: 'üåó' },
  '2025-01-17': { type: 'new_moon', name: '‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏° ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 2', icon: 'üåë' },
  '2025-01-25': { type: 'quarter', name: '‡∏Ç‡∏∂‡πâ‡∏ô 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 3', icon: 'üåì' },
  
  // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 3 (‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå 2025) - ‡∏°‡∏≤‡∏Ü‡∏ö‡∏π‡∏ä‡∏≤
  '2025-02-01': { type: 'full_moon', name: '‡∏ß‡∏±‡∏ô‡∏°‡∏≤‡∏Ü‡∏ö‡∏π‡∏ä‡∏≤', icon: 'üåï', major: true },
  '2025-02-08': { type: 'quarter', name: '‡πÅ‡∏£‡∏° 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 3', icon: 'üåó' },
  '2025-02-15': { type: 'new_moon', name: '‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏° ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 3', icon: 'üåë' },
  '2025-02-24': { type: 'quarter', name: '‡∏Ç‡∏∂‡πâ‡∏ô 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 4', icon: 'üåì' },
  
  // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 4 (‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏° 2025)
  '2025-03-02': { type: 'full_moon', name: '‡∏ß‡∏±‡∏ô‡πÄ‡∏û‡πá‡∏ç ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 4', icon: 'üåï' },
  '2025-03-10': { type: 'quarter', name: '‡πÅ‡∏£‡∏° 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 4', icon: 'üåó' },
  '2025-03-17': { type: 'new_moon', name: '‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏° ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 4', icon: 'üåë' },
  '2025-03-25': { type: 'quarter', name: '‡∏Ç‡∏∂‡πâ‡∏ô 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 5', icon: 'üåì' },
  
  // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 5 (‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô 2025)
  '2025-04-01': { type: 'full_moon', name: '‡∏ß‡∏±‡∏ô‡πÄ‡∏û‡πá‡∏ç ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 5', icon: 'üåï' },
  '2025-04-08': { type: 'quarter', name: '‡πÅ‡∏£‡∏° 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 5', icon: 'üåó' },
  '2025-04-15': { type: 'new_moon', name: '‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏° ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 5', icon: 'üåë' },
  '2025-04-24': { type: 'quarter', name: '‡∏Ç‡∏∂‡πâ‡∏ô 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 6', icon: 'üåì' },
  
  // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 6 (‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏° 2025) - ‡∏ß‡∏¥‡∏™‡∏≤‡∏Ç‡∏ö‡∏π‡∏ä‡∏≤
  '2025-05-01': { type: 'full_moon', name: '‡∏ß‡∏±‡∏ô‡∏ß‡∏¥‡∏™‡∏≤‡∏Ç‡∏ö‡∏π‡∏ä‡∏≤', icon: 'üåï', major: true },
  '2025-05-08': { type: 'quarter', name: '‡πÅ‡∏£‡∏° 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 6', icon: 'üåó' },
  '2025-05-15': { type: 'new_moon', name: '‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏° ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 6', icon: 'üåë' },
  '2025-05-23': { type: 'quarter', name: '‡∏Ç‡∏∂‡πâ‡∏ô 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 7', icon: 'üåì' },
  
  // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 7 (‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô 2025)
  '2025-06-29': { type: 'full_moon', name: '‡∏ß‡∏±‡∏ô‡πÄ‡∏û‡πá‡∏ç ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 7', icon: 'üåï' },
  '2025-06-06': { type: 'quarter', name: '‡πÅ‡∏£‡∏° 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 7', icon: 'üåó' },
  '2025-06-13': { type: 'new_moon', name: '‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏° ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 7', icon: 'üåë' },
  '2025-06-22': { type: 'quarter', name: '‡∏Ç‡∏∂‡πâ‡∏ô 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 8', icon: 'üåì' },
  
  // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 8 (‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏° 2025) - ‡∏≠‡∏≤‡∏™‡∏≤‡∏¨‡∏´‡∏ö‡∏π‡∏ä‡∏≤
  '2025-07-29': { type: 'full_moon', name: '‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏™‡∏≤‡∏¨‡∏´‡∏ö‡∏π‡∏ä‡∏≤', icon: 'üåï', major: true },
  '2025-07-30': { type: 'special', name: '‡∏ß‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏£‡∏£‡∏©‡∏≤', icon: '‚≠ê', major: true },
  '2025-07-05': { type: 'quarter', name: '‡πÅ‡∏£‡∏° 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 8', icon: 'üåó' },
  '2025-07-13': { type: 'new_moon', name: '‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏° ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 8', icon: 'üåë' },
  '2025-07-21': { type: 'quarter', name: '‡∏Ç‡∏∂‡πâ‡∏ô 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 9', icon: 'üåì' },
  
  // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 9 (‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏° 2025)
  '2025-08-27': { type: 'full_moon', name: '‡∏ß‡∏±‡∏ô‡πÄ‡∏û‡πá‡∏ç ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 9', icon: 'üåï' },
  '2025-08-04': { type: 'quarter', name: '‡πÅ‡∏£‡∏° 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 9', icon: 'üåó' },
  '2025-08-11': { type: 'new_moon', name: '‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏° ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 9', icon: 'üåë' },
  '2025-08-20': { type: 'quarter', name: '‡∏Ç‡∏∂‡πâ‡∏ô 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 10', icon: 'üåì' },
  
  // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 10 (‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô 2025)
  '2025-09-26': { type: 'full_moon', name: '‡∏ß‡∏±‡∏ô‡πÄ‡∏û‡πá‡∏ç ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 10', icon: 'üåï' },
  '2025-09-02': { type: 'quarter', name: '‡πÅ‡∏£‡∏° 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 10', icon: 'üåó' },
  '2025-09-10': { type: 'new_moon', name: '‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏° ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 10', icon: 'üåë' },
  '2025-09-18': { type: 'quarter', name: '‡∏Ç‡∏∂‡πâ‡∏ô 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 11', icon: 'üåì' },
  
  // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 11 (‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏° 2025) - ‡∏≠‡∏≠‡∏Å‡∏û‡∏£‡∏£‡∏©‡∏≤
  '2025-10-25': { type: 'full_moon', name: '‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏û‡∏£‡∏£‡∏©‡∏≤', icon: 'üåï', major: true },
  '2025-10-01': { type: 'quarter', name: '‡πÅ‡∏£‡∏° 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 11', icon: 'üåó' },
  '2025-10-09': { type: 'new_moon', name: '‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏° ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 11', icon: 'üåë' },
  '2025-10-17': { type: 'quarter', name: '‡∏Ç‡∏∂‡πâ‡∏ô 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 12', icon: 'üåì' },
  
  // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 12 (‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô 2025) - ‡∏•‡∏≠‡∏¢‡∏Å‡∏£‡∏∞‡∏ó‡∏á
  '2025-11-24': { type: 'full_moon', name: '‡∏ß‡∏±‡∏ô‡∏•‡∏≠‡∏¢‡∏Å‡∏£‡∏∞‡∏ó‡∏á', icon: 'üåï', major: true },
  '2025-11-30': { type: 'quarter', name: '‡πÅ‡∏£‡∏° 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 12', icon: 'üåó' },
  '2025-11-08': { type: 'new_moon', name: '‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏° ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 12', icon: 'üåë' },
  '2025-11-16': { type: 'quarter', name: '‡∏Ç‡∏∂‡πâ‡∏ô 8 ‡∏Ñ‡πà‡∏≥ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 1', icon: 'üåì' },
};

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∞
const HOLY_DAY_INFO = {
  full_moon: {
    description: '‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∞‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÄ‡∏ï‡πá‡∏°‡∏î‡∏ß‡∏á ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏° ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏®‡∏µ‡∏• ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç',
    activities: [
      '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏®‡∏µ‡∏• 8 ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£',
      '‡∏ü‡∏±‡∏á‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ó‡∏®‡∏ô‡∏≤',
      '‡∏ô‡∏±‡πà‡∏á‡∏™‡∏°‡∏≤‡∏ò‡∏¥',
      '‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡∏ï‡∏±‡∏Å‡∏ö‡∏≤‡∏ï‡∏£',
      '‡∏ñ‡∏ß‡∏≤‡∏¢‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏û‡∏£‡∏£‡∏©‡∏≤',
      '‡∏™‡∏ß‡∏î‡∏°‡∏ô‡∏ï‡πå',
      '‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ‡∏ï‡πà‡∏≤‡∏á‡πÜ'
    ]
  },
  new_moon: {
    description: '‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∞‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡∏°‡∏∑‡∏î ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏∞‡∏ó‡πâ‡∏≠‡∏ô‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏° ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡πÉ‡∏´‡πâ‡∏™‡∏á‡∏ö',
    activities: [
      '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏®‡∏µ‡∏• 5 ‡∏´‡∏£‡∏∑‡∏≠ 8 ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£',
      '‡∏ô‡∏±‡πà‡∏á‡∏™‡∏°‡∏≤‡∏ò‡∏¥',
      '‡∏™‡∏ß‡∏î‡∏°‡∏ô‡∏ï‡πå',
      '‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ò‡∏£‡∏£‡∏°',
      '‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç',
      '‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏à‡∏¥‡∏ï‡∏ï‡∏†‡∏≤‡∏ß‡∏ô‡∏≤'
    ]
  },
  quarter: {
    description: '‡∏ß‡∏±‡∏ô‡∏≠‡∏∏‡πÇ‡∏ö‡∏™‡∏ñ ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏° ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏®‡∏µ‡∏• ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ß‡∏±‡∏î',
    activities: [
      '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏®‡∏µ‡∏• 8 ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£',
      '‡πÄ‡∏Ç‡πâ‡∏≤‡∏ß‡∏±‡∏î‡∏ü‡∏±‡∏á‡∏ò‡∏£‡∏£‡∏°',
      '‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡∏ï‡∏±‡∏Å‡∏ö‡∏≤‡∏ï‡∏£',
      '‡∏™‡∏ß‡∏î‡∏°‡∏ô‡∏ï‡πå',
      '‡∏ô‡∏±‡πà‡∏á‡∏™‡∏°‡∏≤‡∏ò‡∏¥',
      '‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ'
    ]
  },
  special: {
    description: '‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∞‡πÉ‡∏´‡∏ç‡πà ‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏≤‡∏á‡∏û‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ô‡∏≤ ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏û‡∏¥‡πÄ‡∏®‡∏©',
    activities: [
      '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏®‡∏µ‡∏• 8 ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£',
      '‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏û‡∏¥‡∏ò‡∏µ‡∏Å‡∏£‡∏£‡∏°‡∏û‡∏¥‡πÄ‡∏®‡∏©',
      '‡∏ü‡∏±‡∏á‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ó‡∏®‡∏ô‡∏≤',
      '‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡πÉ‡∏´‡∏ç‡πà',
      '‡∏ñ‡∏ß‡∏≤‡∏¢‡∏™‡∏±‡∏á‡∏Ü‡∏ó‡∏≤‡∏ô',
      '‡∏ô‡∏±‡πà‡∏á‡∏™‡∏°‡∏≤‡∏ò‡∏¥',
      '‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©'
    ]
  },
  major: {
    description: '‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∞‡πÉ‡∏´‡∏ç‡πà ‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏≤‡∏á‡∏û‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ô‡∏≤',
    activities: [
      '‡πÑ‡∏õ‡∏ß‡∏±‡∏î',
      '‡∏ü‡∏±‡∏á‡πÄ‡∏ó‡∏®‡∏ô‡πå',
      '‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡πÉ‡∏´‡∏ç‡πà',
      '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏®‡∏µ‡∏• 8 ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£',
      '‡∏ô‡∏±‡πà‡∏á‡∏™‡∏°‡∏≤‡∏ò‡∏¥',
      '‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô 3 ‡∏£‡∏≠‡∏ö'
    ]
  }
};

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∞‡πÉ‡∏´‡∏ç‡πà‡∏û‡∏¥‡πÄ‡∏®‡∏©
const MAJOR_HOLY_DAYS = {
  '‡∏ß‡∏±‡∏ô‡∏ß‡∏¥‡∏™‡∏≤‡∏Ç‡∏ö‡∏π‡∏ä‡∏≤': {
    description: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏£‡∏∞‡∏û‡∏∏‡∏ó‡∏ò‡πÄ‡∏à‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏™‡∏π‡∏ï‡∏¥ ‡∏ï‡∏£‡∏±‡∏™‡∏£‡∏π‡πâ ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏¥‡∏ô‡∏¥‡∏û‡∏û‡∏≤‡∏ô ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏û‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ô‡∏≤',
    significance: '‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏™‡∏≤‡∏Å‡∏•‡∏Ç‡∏≠‡∏á‡∏û‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ô‡∏≤',
    activities: [
      '‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô 3 ‡∏£‡∏≠‡∏ö',
      '‡∏ü‡∏±‡∏á‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ó‡∏®‡∏ô‡∏≤‡∏û‡∏¥‡πÄ‡∏®‡∏©',
      '‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡πÉ‡∏´‡∏ç‡πà',
      '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏®‡∏µ‡∏• 8 ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£',
      '‡∏ñ‡∏ß‡∏≤‡∏¢‡∏™‡∏±‡∏á‡∏Ü‡∏ó‡∏≤‡∏ô',
      '‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏ô‡∏Å‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏õ‡∏•‡∏≤',
      '‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©'
    ]
  },
  '‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏™‡∏≤‡∏¨‡∏´‡∏ö‡∏π‡∏ä‡∏≤': {
    description: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏£‡∏∞‡∏û‡∏∏‡∏ó‡∏ò‡πÄ‡∏à‡πâ‡∏≤‡∏ó‡∏£‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ò‡∏£‡∏£‡∏°‡∏à‡∏±‡∏Å‡∏Å‡∏±‡∏õ‡∏õ‡∏ß‡∏±‡∏ï‡∏ï‡∏ô‡∏™‡∏π‡∏ï‡∏£ ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏û‡∏£‡∏∞‡∏™‡∏á‡∏Ü‡πå',
    significance: '‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏û‡∏£‡∏∞‡πÑ‡∏ï‡∏£‡∏£‡∏±‡∏ï‡∏ô‡πå‡∏Ñ‡∏£‡∏ö‡∏≠‡∏á‡∏Ñ‡πå',
    activities: [
      '‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô 3 ‡∏£‡∏≠‡∏ö',
      '‡∏ü‡∏±‡∏á‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ó‡∏®‡∏ô‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ò‡∏£‡∏°‡∏à‡∏±‡∏Å‡∏£',
      '‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡πÉ‡∏´‡∏ç‡πà',
      '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏®‡∏µ‡∏• 8 ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£',
      '‡∏ñ‡∏ß‡∏≤‡∏¢‡∏™‡∏±‡∏á‡∏Ü‡∏ó‡∏≤‡∏ô',
      '‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©'
    ]
  },
  '‡∏ß‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏£‡∏£‡∏©‡∏≤': {
    description: '‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏§‡∏î‡∏π‡∏û‡∏£‡∏£‡∏©‡∏≤ ‡∏û‡∏£‡∏∞‡∏™‡∏á‡∏Ü‡πå‡∏à‡∏≥‡∏û‡∏£‡∏£‡∏©‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏î 3 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô',
    significance: '‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡πâ‡∏ô',
    activities: [
      '‡∏ñ‡∏ß‡∏≤‡∏¢‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏û‡∏£‡∏£‡∏©‡∏≤',
      '‡∏ñ‡∏ß‡∏≤‡∏¢‡∏ú‡πâ‡∏≤‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥‡∏ù‡∏ô',
      '‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏£‡∏£‡∏©‡∏≤',
      '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏®‡∏µ‡∏• 8 ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£',
      '‡∏ü‡∏±‡∏á‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ó‡∏®‡∏ô‡∏≤',
      '‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©'
    ]
  },
  '‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏û‡∏£‡∏£‡∏©‡∏≤': {
    description: '‡∏ß‡∏±‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏§‡∏î‡∏π‡∏û‡∏£‡∏£‡∏©‡∏≤ ‡∏û‡∏£‡∏∞‡∏™‡∏á‡∏Ü‡πå‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡πÑ‡∏´‡∏ô‡∏°‡∏≤‡πÑ‡∏´‡∏ô‡πÑ‡∏î‡πâ',
    significance: '‡∏ß‡∏±‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏û‡∏£‡∏£‡∏©‡∏≤',
    activities: [
      '‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡∏ï‡∏±‡∏Å‡∏ö‡∏≤‡∏ï‡∏£‡πÄ‡∏ó‡πÇ‡∏ß',
      '‡∏ñ‡∏ß‡∏≤‡∏¢‡∏Å‡∏ê‡∏¥‡∏ô',
      '‡∏ü‡∏±‡∏á‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ó‡∏®‡∏ô‡∏≤',
      '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏®‡∏µ‡∏• 8 ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£',
      '‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡πÉ‡∏´‡∏ç‡πà',
      '‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô'
    ]
  },
  '‡∏ß‡∏±‡∏ô‡∏•‡∏≠‡∏¢‡∏Å‡∏£‡∏∞‡∏ó‡∏á': {
    description: '‡∏ß‡∏±‡∏ô‡∏Ç‡∏≠‡∏Ç‡∏°‡∏≤‡∏û‡∏£‡∏∞‡πÅ‡∏°‡πà‡∏Ñ‡∏á‡∏Ñ‡∏≤ ‡πÅ‡∏•‡∏∞‡∏™‡∏∞‡πÄ‡∏î‡∏≤‡∏∞‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå ‡∏•‡∏≠‡∏¢‡∏Å‡∏£‡∏∞‡∏ó‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡∏£‡∏¥‡∏°‡∏á‡∏Ñ‡∏•',
    significance: '‡∏ß‡∏±‡∏ô‡∏Ç‡∏≠‡∏Ç‡∏°‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏∞‡πÄ‡∏î‡∏≤‡∏∞‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå',
    activities: [
      '‡∏•‡∏≠‡∏¢‡∏Å‡∏£‡∏∞‡∏ó‡∏á',
      '‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏ó‡∏µ‡∏õ',
      '‡∏™‡∏ß‡∏î‡∏°‡∏ô‡∏ï‡πå‡∏Ç‡∏≠‡∏Ç‡∏°‡∏≤',
      '‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç',
      '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏®‡∏µ‡∏•',
      '‡∏õ‡∏•‡πà‡∏≠‡∏¢‡πÇ‡∏Ñ‡∏°‡∏•‡∏≠‡∏¢'
    ]
  }
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å iCAL API
async function fetchFromICAL(date) {
  try {
    const response = await fetch('https://www.google.com/calendar/ical/n7kthnfuc8uldm955sfkpjt244%40group.calendar.google.com/public/basic.ics');
    const icalData = await response.text();
    
    const jcalData = ICAL.parse(icalData);
    const comp = new ICAL.Component(jcalData);
    const vevents = comp.getAllSubcomponents('vevent');
    
    const targetDate = new Date(date);
    
    for (const vevent of vevents) {
      const event = new ICAL.Event(vevent);
      const eventDate = event.startDate.toJSDate();
      
      if (eventDate.toDateString() === targetDate.toDateString()) {
        return {
          found: true,
          summary: event.summary,
          date: eventDate
        };
      }
    }
    
    return { found: false };
  } catch (error) {
    console.error('Error fetching iCAL data:', error);
    return { found: false, error: error.message };
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å fallback data
function getFallbackData(date) {
  const dateStr = date; // ‡πÉ‡∏ä‡πâ date string ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á (YYYY-MM-DD)
  
  if (fallbackHolyDays[dateStr]) {
    return {
      found: true,
      data: fallbackHolyDays[dateStr]
    };
  }
  
  return { found: false };
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö API endpoint
export default async function handler(req, res) {
  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ CORS headers
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
  
  // Handle preflight requests
  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }
  
  if (req.method !== 'GET') {
    return res.status(405).json({ error: 'Method not allowed' });
  }
  
  try {
    const { date, month, year, source = 'hybrid' } = req.query;
    
    // ‡∏ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
    if (month && year) {
      return handleMonthRequest(req, res, month, year);
    }
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ date ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    const targetDate = date || new Date().toISOString().split('T')[0];
    
    // Validate date format
    if (!/^\d{4}-\d{2}-\d{2}$/.test(targetDate)) {
      return res.status(400).json({ 
        error: 'Invalid date format. Use YYYY-MM-DD' 
      });
    }
    
    let icalResult = { found: false };
    let fallbackResult = { found: false };
    
    // ‡∏•‡∏≠‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å iCAL ‡∏Å‡πà‡∏≠‡∏ô (‡∏ñ‡πâ‡∏≤ source ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà fallback)
    if (source !== 'fallback') {
      icalResult = await fetchFromICAL(targetDate);
    }
    
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å fallback data
    fallbackResult = getFallbackData(targetDate);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á response
    const dateObj = new Date(targetDate);
    const isHolyDay = icalResult.found || fallbackResult.found;
    
    let holyDayData = null;
    if (fallbackResult.found) {
      holyDayData = fallbackResult.data;
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á response object
    const response = {
      date: targetDate,
      isHolyDay,
      dayOfWeek: dateObj.toLocaleDateString('th-TH', { weekday: 'long' }),
      sources: {
        ical: icalResult.found,
        fallback: fallbackResult.found,
        confidence: icalResult.found && fallbackResult.found ? 'high' : 
                   icalResult.found || fallbackResult.found ? 'medium' : 'low'
      }
    };
    
    if (isHolyDay && holyDayData) {
      const thaiMonth = getThaiMonth(dateObj.getMonth() + 1);
      const thaiYear = getThaiYear(dateObj.getFullYear());
      const info = HOLY_DAY_INFO[holyDayData.type] || HOLY_DAY_INFO.quarter;
      
      response.type = holyDayData.type;
      response.name = holyDayData.name;
      response.icon = holyDayData.icon;
      response.thaiMonth = thaiMonth;
      response.thaiYear = thaiYear;
      response.description = info.description;
      response.activities = info.activities;
      response.majorHolyDay = {
        is: holyDayData.major || false,
        name: holyDayData.major ? holyDayData.name : null
      };
    } else {
      response.type = null;
      response.name = null;
      response.icon = null;
      response.majorHolyDay = { is: false, name: null };
    }
    
    // Cache headers
    res.setHeader('Cache-Control', 'public, max-age=3600'); // 1 hour
    
    return res.status(200).json(response);
    
  } catch (error) {
    console.error('API Error:', error);
    return res.status(500).json({ 
      error: 'Internal server error',
      message: error.message 
    });
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ request ‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
async function handleMonthRequest(req, res, month, year) {
  try {
    const monthNum = parseInt(month);
    const yearNum = parseInt(year);
    
    if (monthNum < 1 || monthNum > 12 || yearNum < 2020 || yearNum > 2030) {
      return res.status(400).json({ error: 'Invalid month or year' });
    }
    
    const holyDays = [];
    const majorHolyDays = [];
    
    // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
    const daysInMonth = new Date(yearNum, monthNum, 0).getDate();
    
    for (let day = 1; day <= daysInMonth; day++) {
      const dateStr = `${yearNum}-${String(monthNum).padStart(2, '0')}-${String(day).padStart(2, '0')}`;
      const fallbackResult = getFallbackData(dateStr);
      
      if (fallbackResult.found) {
        const dayData = {
          date: dateStr,
          type: fallbackResult.data.type,
          name: fallbackResult.data.name,
          icon: fallbackResult.data.icon
        };
        
        if (fallbackResult.data.major) {
          majorHolyDays.push({
            ...dayData,
            major: true
          });
        } else {
          holyDays.push(dayData);
        }
      }
    }
    
    const response = {
      month: monthNum,
      year: yearNum,
      thaiYear: getThaiYear(yearNum),
      holyDays,
      majorHolyDays
    };
    
    res.setHeader('Cache-Control', 'public, max-age=7200'); // 2 hours
    return res.status(200).json(response);
    
  } catch (error) {
    console.error('Month API Error:', error);
    return res.status(500).json({ 
      error: 'Internal server error',
      message: error.message 
    });
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
function getThaiMonth(month) {
  const thaiMonths = [
    '', '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á (1)', '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏™‡∏≠‡∏á (2)', '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏™‡∏≤‡∏° (3)', '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏™‡∏µ‡πà (4)',
    '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏´‡πâ‡∏≤ (5)', '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏´‡∏Å (6)', '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏à‡πá‡∏î (7)', '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÅ‡∏õ‡∏î (8)',
    '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏Å‡πâ‡∏≤ (9)', '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏™‡∏¥‡∏ö (10)', '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏™‡∏¥‡∏ö‡πÄ‡∏≠‡πá‡∏î (11)', '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏™‡∏¥‡∏ö‡∏™‡∏≠‡∏á (12)'
  ];
  return thaiMonths[month] || `‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ${month}`;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏õ‡∏•‡∏á‡∏õ‡∏µ‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
function getThaiYear(year) {
  const animals = ['‡∏´‡∏ô‡∏π', '‡∏ß‡∏±‡∏ß', '‡πÄ‡∏™‡∏∑‡∏≠', '‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢', '‡∏°‡∏∞‡πÇ‡∏£‡∏á', '‡∏°‡∏∞‡πÄ‡∏™‡πá‡∏á', '‡∏°‡∏∞‡πÄ‡∏°‡∏µ‡∏¢', '‡∏°‡∏∞‡πÅ‡∏°', '‡∏ß‡∏≠‡∏Å', '‡∏£‡∏∞‡∏Å‡∏≤', '‡∏à‡∏≠', '‡∏Å‡∏∏‡∏ô'];
  const animalIndex = (year - 4) % 12;
  return `‡∏õ‡∏µ${animals[animalIndex]}`;
}